{"version":3,"sources":["images/img.jpg","components/Skills.js","components/Sidebar.js","components/Experience.js","components/Introduction.js","components/Education.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Skills","className","csvData","skills","map","skill","index","key","Sidebar","src","img","alt","aria-hidden","href","Experience","experience","expIndex","startDate","endDate","position","companyName","projects","project","title","tools","responsibilities","responsibility","length","Introduction","introduction","Education","cvData","education","year","degree","schoolName","branch","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mhHAAAA,EAAOC,QAAU,IAA0B,iC,2LCoB5BC,EAjBA,kBACb,oCACE,yBAAKC,UAAU,aACb,4BAAQA,UAAU,oBAChB,wBAAIA,UAAU,oBAAd,WAEF,wBAAIA,UAAU,cACXC,EAAQC,OAAOC,KAAI,SAACC,EAAOC,GAAR,OAClB,wBAAIC,IAAKD,EAAOL,UAAU,yBACvBI,UCqBEG,EA7BC,kBACd,yBAAKP,UAAU,gCACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,gBAAgBQ,IAAKC,EAAKC,IAAI,YAE7C,wBAAIV,UAAU,gBAAd,kBACA,6BACE,uBAAGA,UAAU,mBAAmBW,cAAY,SAC5C,2BAAOX,UAAU,gBAAjB,WAEE,uBAAGY,KAAK,6BAAR,wBAGJ,6BACE,uBAAGZ,UAAU,iBAAiBW,cAAY,SAC1C,2BAAOX,UAAU,gBAAjB,WAEE,uBAAGY,KAAK,wCAAR,gCAOR,kBAAC,EAAD,QCaWC,EAvCI,wBACjB,oCACE,gCACE,wBAAIb,UAAU,8BAAd,gBAFJ,UAIGC,EAAQa,kBAJX,aAIG,EAAoBX,KAAI,SAACW,EAAYC,GAAb,eACvB,oCACE,0BAAMf,UAAU,yBAAyBc,EAAWE,UAApD,MAAkEF,EAAWG,SAC7E,6BACE,0BAAMjB,UAAU,6BAA6Bc,EAAWI,UAD1D,KAC6E,IAC3E,0BAAMlB,UAAU,SAASc,EAAWK,cAJxC,UAMIL,EAAWM,gBANf,aAMI,EAAqBjB,KAAI,SAACkB,EAAShB,GAAV,aACvB,yBAAKL,UAAU,QACb,iCACE,wBAAIA,UAAU,oBAAd,YAA2CK,EAAQ,EAAnD,MACA,6BACE,0BAAML,UAAU,SAAhB,YADF,WAC2CqB,QAD3C,IAC2CA,OAD3C,EAC2CA,EAASC,MAAO,KAE3D,6BACE,0BAAMtB,UAAU,SAAhB,wBADF,WACuDqB,QADvD,IACuDA,OADvD,EACuDA,EAASE,MAAO,KAEvE,wBAAIvB,UAAU,QAAd,gCACA,sCACGqB,EAAQG,wBADX,aACG,EAA0BrB,KAAI,SAACsB,EAAgBpB,GAAjB,OAC7B,oCACA,4BAAKoB,aAOhBV,GAAY,UAAAd,EAAQa,kBAAR,eAAoBY,QAAS,GAAM,mCCxBzCC,EATM,kBACnB,oCACE,wBAAI3B,UAAU,8BAAd,gBACA,uBAAGA,UAAU,eACVC,EAAQ2B,gBCgBAC,EApBG,kBAChB,oCACE,gCACE,wBAAI7B,UAAU,oBAAd,cAED8B,EAAOC,UAAU5B,KAAI,SAAC4B,EAAW1B,GAAZ,OACpB,yBAAKL,UAAU,QACb,yBAAKA,UAAU,yBAAyB+B,EAAUC,MAClD,6BACE,0BAAMhC,UAAU,6BAA6B+B,EAAUE,OAAvD,KADF,KAC2E,IACzE,0BAAMjC,UAAU,SACb+B,EAAUG,aAGdH,EAAUI,QAAU,8BAAOJ,EAAUI,cCQ/BC,EAhBH,WACV,OACE,oCACE,yBAAKpC,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,oBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,aCNLqC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.849a5031.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img.b87aa314.jpg\";","import React from \"react\";\nimport csvData from \"../cv.json\";\n\nconst Skills = () => (\n  <>\n    <div className=\"container\">\n      <header className=\"text-center mt-5\">\n        <h2 className=\"shadow-sm header\">Skills</h2>\n      </header>\n      <ul className=\"list-group\">\n        {csvData.skills.map((skill, index) => (\n          <li key={index} className=\"title list-group-item\">\n            {skill}\n          </li>\n        ))}\n      </ul>\n    </div>\n  </>\n);\n\nexport default Skills;\n","import React from \"react\";\nimport * as img from \"../images/img.jpg\";\nimport Skills from \"./Skills\";\n\nconst Sidebar = () => (\n  <div className=\"col-sm-3 jumbotron shadow-sm\">\n    <div className=\"container\">\n      <div className=\"text-center\">\n        <img className=\"img img-fluid\" src={img} alt=\"display\"/>\n\n        <h2 className=\"display-name\">Snehal Ramteke</h2>\n        <div>\n          <i className=\"fa fa-envelope-o\" aria-hidden=\"true\"></i>\n          <label className=\"header-label\">\n            &nbsp;&nbsp;\n            <a href=\"mailto:isnehalr@gmail.com\">isnehalr@gmail.com</a>\n          </label>\n        </div>\n        <div>\n          <i className=\"fa fa-linkedin\" aria-hidden=\"true\"></i>\n          <label className=\"header-label\">\n            &nbsp;&nbsp;\n            <a href=\"https://www.linkedin.com/in/isnehalr\">\n              linkedin.com/in/isnehalr\n            </a>\n          </label>\n        </div>\n      </div>\n    </div>\n    <Skills />\n  </div>\n);\n\nexport default Sidebar;\n","import React from \"react\";\nimport csvData from \"../cv.json\";\n\nconst Experience = () => (\n  <>\n    <header>\n      <h2 className=\"display-5 shadow-sm header\"> Experience</h2>\n    </header>\n    {csvData.experience?.map((experience, expIndex) => (\n      <>\n        <span className=\"year font-weight-bold\">{experience.startDate} - {experience.endDate}</span>\n        <div>\n          <span className=\"position font-weight-bold\">{experience.position}</span> -{\" \"}\n          <span className=\"title\">{experience.companyName}</span>\n        </div>\n        { experience.projects?.map((project, index) => (\n            <div className=\"mt-2\">\n              <section>\n                <h6 className=\"font-weight-bold\">Project #{index + 1} :</h6>\n                <div>\n                  <span className=\"title\"> Title :</span> {project?.title}{\" \"}\n                </div>\n                <div>\n                  <span className=\"title\">Tools/Technologies :</span> {project?.tools}{\" \"}\n                </div>\n                <h6 className=\"mt-2\">Roles and Responsibilities: </h6>\n                <ul>\n                  {project.responsibilities?.map((responsibility, index) => (\n                    <>\n                    <li>{responsibility}</li>\n                    </>\n                  ))}\n                </ul>           \n              </section>\n            </div>\n        ))}\n        {expIndex < (csvData.experience?.length - 1) && <hr/>}\n      </>\n    ))}\n  </>\n);\n\nexport default Experience;\n","import React from \"react\";\nimport csvData from \"../cv.json\";\n\nconst Introduction = () => (\n  <>\n    <h2 className=\"display-5 shadow-sm header\">Introduction</h2>\n    <p className=\"text-indent\">\n      {csvData.introduction}\n    </p>\n  </>\n);\n\nexport default Introduction;\n","import React from \"react\";\nimport cvData from \"../cv.json\";\n\nconst Education = () => (\n  <>\n    <header>\n      <h2 className=\"shadow-sm header\">Education</h2>\n    </header>\n    {cvData.education.map((education, index) => (\n      <div className=\"mt-2\">\n        <div className=\"year font-weight-bold\">{education.year}</div>\n        <div>\n          <span className=\"position font-weight-bold\">{education.degree} </span> -{\" \"}\n          <span className=\"title\">\n            {education.schoolName}\n          </span>\n        </div>\n        {education.branch && <span>{education.branch}</span>}\n      </div>\n    ))}\n  </>\n);\n\nexport default Education;\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport Sidebar from \"./components/Sidebar\";\nimport Experience from \"./components/Experience\";\nimport Introduction from \"./components/Introduction\";\nimport Education from \"./components/Education\";\n\nconst App = () => {\n  return (\n    <>\n      <div className=\"row\">\n        <Sidebar />\n        <div className=\"col-sm-9 content\">\n          <Introduction />\n          <Experience />\n          <Education />\n          <div className=\"pb-5\" />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}